version: 2.1

executors:
  android:
    environment:
      NODE_OPTIONS: --max_old_space_size=12000
      NODE_ENV: production
      BABEL_ENV: production
    docker:
      - image: circleci/android:api-27-node
    working_directory: ~/mattermost-mobile
    resource_class: large

  ios:
    environment:
      NODE_OPTIONS: --max_old_space_size=12000
      NODE_ENV: production
      BABEL_ENV: production
    macos:
      xcode: "11.0.0"
    working_directory: ~/mattermost-mobile
    shell: /bin/bash --login -o pipefail

commands:
  checkout-private:
    description: "Checkout the private repo with build env vars"
    steps:
      - add_ssh_keys:
          fingerprints:
            - "59:4d:99:5e:1c:6d:30:36:6d:60:76:88:ff:a7:ab:63"
      - run:
          name: Clone the mobile private repo
          command: git clone git@github.com:mattermost/mattermost-mobile-private.git ~/mattermost-mobile-private

  android-gem-dependencies:
    description: "Get Fastlane dependencies for Android builds"
    steps:
      - restore_cache:
          name: Restore Fastlane cache
          key: v1-gems-android-{{ checksum "fastlane/Gemfile.lock" }}-{{ arch }}
      - run:
          working_directory: fastlane
          name: Download Fastlane dependencies
          command: bundle install --path vendor/bundle
      - save_cache:
          name: Save Fastlane cache
          key: v1-gems-android-{{ checksum "fastlane/Gemfile.lock" }}-{{ arch }}
          paths:
            - fastlane/vendor/bundle

  android-gradle-dependencies:
    description: "Get Gradle dependencies for Android buils"
    steps:
      - restore_cache:
          name: Restore Gradle cache
          key: v1-gradle-{{ checksum "android/build.gradle" }}-{{ checksum  "android/app/build.gradle" }}
      - run:
          working_directory: android
          name: Download Gradle dependencies
          command: ./gradlew dependencies
      - save_cache:
          name: Save Gradle cache
          paths:
            - ~/.gradle
          key: v1-gradle-{{ checksum "android/build.gradle" }}-{{ checksum  "android/app/build.gradle" }}

  ios-gem-dependencies:
    description: "Get Fastlane dependencies for iOS builds"
    steps:
      - restore_cache:
          name: Restore Fastlane cache
          key: v1-gems-ios-{{ checksum "fastlane/Gemfile.lock" }}-{{ arch }}
      - run:
          working_directory: fastlane
          name: Download Fastlane dependencies
          command: bundle install --path vendor/bundle
      - save_cache:
          name: Save Fastlane cache
          key: v1-gems-ios-{{ checksum "fastlane/Gemfile.lock" }}-{{ arch }}
          paths:
            - fastlane/vendor/bundle

  npm-dependencies:
    description: "Get JavaScript dependencies for the job"
    steps:
      - restore_cache:
          name: Restore npm cache
          key: v1-npm-{{ checksum "package.json" }}-{{ arch }}
      - run:
          name: Getting JavaScript dependencies
          command: NODE_ENV=development npm install
      - save_cache:
          name: Save npm cache
          key: v1-npm-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

  build-android:
    description: "Builds the android app"
    steps:
      - checkout:
          path: ~/mattermost-mobile
      - checkout-private
      - attach_workspace:
          at: ~/mattermost-mobile
      - android-gem-dependencies
      - android-gradle-dependencies
      - run:
          name: Append Keystore to build Android
          command: |
            cp ~/mattermost-mobile-private/android/${STORE_FILE} android/app/${STORE_FILE}
            echo MATTERMOST_RELEASE_STORE_FILE=${STORE_FILE} | tee -a android/gradle.properties > /dev/null
            echo ${STORE_ALIAS} | tee -a android/gradle.properties > /dev/null
            echo ${STORE_PASSWORD} | tee -a android/gradle.properties > /dev/null
      - run:
          working_directory: fastlane
          name: Run fastlane to build android
          no_output_timeout: 30m
          command: bundle exec fastlane android build || exit 1

  build-ios:
    description: "Builds the iOS app"
    steps:
      - checkout:
          path: ~/mattermost-mobile
      - npm-dependencies
      - run:
          name: Set Ruby version
          command:  echo "ruby-2.6.3" > ~/.ruby-version
      - attach_workspace:
          at: ~/mattermost-mobile
      - ios-gem-dependencies
#      - run:
#          working_directory: fastlane
#          name: Run match to sync adhoc profiles
#          command: bundle exec fastlane ios adhoc
      - run:
          working_directory: fastlane
          name: Run fastlane to build iOS
          no_output_timeout: 30m
          command: bundle exec fastlane ios build || exit 1

jobs:
  test:
    working_directory: ~/mattermost-mobile
    docker:
      - image: circleci/node:10
    steps:
      - checkout:
          path: ~/mattermost-mobile
      - npm-dependencies
      - restore_cache:
          name: Restore assets cache
          key: v1-assets-{{ checksum "assets/base/config.json" }}-{{ arch }}
      - run:
          name: Generate assets
          command: make dist/assets
      - save_cache:
          name: Save assets cache
          key: v1-assets-{{ checksum "assets/base/config.json" }}-{{ arch }}
          paths:
            - dist
      - run:
          name: Check styles
          command: npm run check
      - run:
          name: Running Tests
          command: npm test
      - persist_to_workspace:
          root: ~/mattermost-mobile
          paths:
            - node_modules
            - dist

  android-beta:
    executor: android
    environment:
      APP_NAME: "Mattermost Beta"
      BETA_BUILD: true
      REPLACE_ASSETS: false
      MAIN_APP_IDENTIFIER: "com.mattermost.rnbeta"
      SENTRY_ENABLED: false
      SEGMENT_API_KEY: ${SEGMENT_API_KEY_BETA}
      TELEMETRY_ENABLED: true
    steps:
      - build-android

  android-release:
    executor: android
    environment:
      APP_NAME: "Mattermost"
      BETA_BUILD: false
      REPLACE_ASSETS: true
      MAIN_APP_IDENTIFIER: "com.mattermost.rn"
      SENTRY_ENABLED: false
      SEGMENT_API_KEY: ${SEGMENT_API_KEY_PROD}
      TELEMETRY_ENABLED: false
    steps:
      - build-android

  ios-beta:
    executor: ios
    environment:
      APP_NAME: "Mattermost Beta"
      BETA_BUILD: true
      REPLACE_ASSETS: false
      MAIN_APP_IDENTIFIER: "com.mattermost.rnbeta"
      SENTRY_ENABLED: false
      SEGMENT_API_KEY: ${SEGMENT_API_KEY_BETA}
      MATCH_TYPE: appstore
      MATCH_APP_IDENTIFIER: 'com.mattermost.rnbeta.NotificationService,com.mattermost.rnbeta.MattermostShare,com.mattermost.rnbeta'
      EXTENSION_APP_IDENTIFIER: 'com.mattermost.rnbeta.MattermostShare'
      NOTIFICATION_SERVICE_IDENTIFIER: 'com.mattermost.rnbeta.NotificationService'
      IOS_APP_GROUP: 'group.com.mattermost.rnbeta'
      IOS_ICLOUD_CONTAINER: 'iCloud.com.mattermost.rnbeta'
      IOS_BUILD_EXPORT_METHOD: 'app-store'
    steps:
      - build-ios

  ios-release:
    executor: ios
    environment:
      APP_NAME: "Mattermost"
      BETA_BUILD: false
      REPLACE_ASSETS: true
      MAIN_APP_IDENTIFIER: "com.mattermost.rn"
      SENTRY_ENABLED: false
      SEGMENT_API_KEY: ${SEGMENT_API_KEY_PROD}
      MATCH_TYPE: appstore
      MATCH_APP_IDENTIFIER: 'com.mattermost.rn.NotificationService,com.mattermost.rn.MattermostShare,com.mattermost.rn'
      EXTENSION_APP_IDENTIFIER: 'com.mattermost.rn.MattermostShare'
      NOTIFICATION_SERVICE_IDENTIFIER: 'com.mattermost.rn.NotificationService'
      IOS_APP_GROUP: 'group.com.mattermost'
      IOS_ICLOUD_CONTAINER: 'iCloud.com.mattermost.rn'
      IOS_BUILD_EXPORT_METHOD: 'app-store'
    steps:
      - build-ios

workflows:
  version: 2
  test-and-build:
    jobs:
      - test
      - android-release:
          context: mattermost-mobile
          requires:
            - test
          filters:
            branches:
              only: ci
      - android-beta:
          context: mattermost-mobile
          requires:
            - test
          filters:
            branches:
              only: ci
      - ios-beta:
          context: mattermost-mobile
          requires:
            - test
          filters:
            branches:
              only: ci
      - ios-release:
          context: mattermost-mobile
          requires:
            - test
          filters:
            branches:
              only: ci
